{"version":3,"sources":["Components/cartIcon.component.js","Components/search.component.js","Components/header.component.js","Components/itemListCard.Component.js","Components/home.component.js","Components/cart.component.js","Components/filter.component.js","App.js","serviceWorker.js","store/reducerCount.js","index.js"],"names":["Link","require","CartIcon","to","className","this","props","quantity","Component","connect","state","reducerCount","Search","type","name","placeholder","href","Header","Navbar","expand","variant","bg","Brand","Collapse","Text","ItemListCard","dataList","map","item","key","id","Card","style","width","Img","src","img_url","Body","Title","Button","onClick","addToCart","itemCount","dispatch","historyAddToCart","Home","isLoaded","items","cardList","fetch","then","res","json","result","console","log","setState","error","Count","onCountUp","onCountDown","count","Cart","addToCardHistory","el","onDeleteItem","Range","createSliderWithTooltip","Slider","wrapperStyle","marginTop","marginBottom","FilterProgress","min","max","defaultValue","tipFormatter","value","App","path","exact","strict","component","Boolean","window","location","hostname","match","innitialState","action","newState","concat","rootReducer","combineReducers","store","createStore","applyMiddleware","next","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kWAEMA,EAAOC,EAAQ,IAAoBD,KAGnCE,E,iLAGF,OACE,kBAACF,EAAD,CAAMG,GAAG,QAAQC,UAAU,YAA3B,aACaC,KAAKC,MAAMC,c,GALPC,aAiBRC,eANS,SAACC,GACvB,MAAO,CACLH,SAAUG,EAAMC,aAAaJ,YAIlBE,CAAyBP,GCTzBU,E,iLATP,OACI,yBAAKR,UAAU,kBACX,2BAAOA,UAAU,eAAeS,KAAK,OAAOC,KAAK,GAAGC,YAAY,cAChE,uBAAGC,KAAK,IAAIZ,UAAU,eAAc,uBAAGA,UAAU,wB,GAL5CI,aC+BNS,E,YAzBb,WAAYX,GAAQ,qEACZA,I,sEAIN,OACE,yBAAKF,UAAU,iBACb,kBAACc,EAAA,EAAD,CAAQC,OAAO,KAAKC,QAAQ,OAAOC,GAAG,WAClC,kBAACH,EAAA,EAAOI,MAAR,CAAcN,KAAK,0BAAnB,QACA,kBAACE,EAAA,EAAOK,SAAR,CAAiBnB,UAAU,uBAEzB,kBAACc,EAAA,EAAOM,KAAR,KACE,kBAAC,EAAD,OAEF,kBAACN,EAAA,EAAOM,KAAR,KACE,kBAAC,EAAD,c,GAjBKhB,a,kBCCfiB,E,YACF,WAAYnB,GAAQ,qEACZA,I,sEAIE,IAAD,OACP,OACE,6BACE,yBAAKF,UAAU,OAEbC,KAAKC,MAAMoB,SAASC,KAAI,SAACC,GAAD,OACpB,yBAAKxB,UAAU,gBAAgByB,IAAKD,EAAKE,IACvC,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SACpB,kBAACF,EAAA,EAAKG,IAAN,CAAUd,QAAQ,MAAMe,IAAKP,EAAKQ,UAClC,kBAACL,EAAA,EAAKM,KAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,KAAcV,EAAKd,MACnB,kBAACiB,EAAA,EAAKP,KAAN,MAGA,kBAACe,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKlC,MAAMmC,UAAUb,IAAOR,QAAQ,WAA3D,2B,GApBKZ,aA2CVC,eAXS,SAACC,GACvB,MAAO,CACLgC,UAAWhC,EAAMC,aAAa+B,cAIP,SAACC,GAC1B,MAAM,CACJF,UAAW,SAACb,GAAD,OAAUe,EAAS,CAAC9B,KAAM,cAAe+B,iBAAiBhB,QAG1DnB,CAA6CgB,GCD/CoB,E,YA5Cb,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDI,MAAQ,CACXoC,UAAU,EACVC,MAAO,IALQ,E,iFAUjB1C,KAAK2C,a,iCAGK,IAAD,OACTC,MAAM,qCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZV,UAAU,EACVC,MAAOM,OAGX,SAACI,GACC,EAAKD,SAAS,CACZV,UAAU,EACVW,e,+BAOR,OACE,kBAAC,WAAD,KACE,4CAEA,kBAAC,EAAD,CAAc/B,SAAUrB,KAAKK,MAAMqC,a,GAxCxBvC,aCCbkD,EAAQ,SAACpD,GAAW,IACjBqD,EAAkCrD,EAAlCqD,UAAWC,EAAuBtD,EAAvBsD,YAAaC,EAAUvD,EAAVuD,MAEhC,OACC,yBAAKzD,UAAU,aACX,4BAAQoC,QAASmB,GAAjB,YACA,uCAAY,8BAAOE,IACnB,4BAAQrB,QAASoB,GAAjB,gBAIAE,E,YAEJ,WAAYxD,GAAQ,qEACZA,I,sEAIE,IAAD,OAEP,OADAgD,QAAQC,IAAIlD,KAAKC,MAAMyD,kBAEnB,6BAAS3D,UAAU,mBACjB,yBAAKA,UAAU,OAEXC,KAAKC,MAAMyD,iBAAiBpC,KAAI,SAACqC,GAC/B,OACI,yBAAK5D,UAAU,WAAWyB,IAAKmC,EAAGlC,IAChC,kBAACC,EAAA,EAAD,CAAM3B,UAAU,QAChB,kBAAC2B,EAAA,EAAKM,KAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,KAAa0B,EAAGlD,MAChB,kBAACiB,EAAA,EAAKP,KAAN,KACE,kBAAC,EAAD,CACEM,GAAIkC,EAAGlC,GACP6B,UAAW,EAAKrD,MAAMqD,UACtBC,YAAa,EAAKtD,MAAMsD,YACxBC,MAAO,EAAKvD,MAAMuD,SAGtB,kBAAC9B,EAAA,EAAK/B,KAAN,CAAWgB,KAAK,KAAhB,aACA,kBAACe,EAAA,EAAK/B,KAAN,CAAWgB,KAAK,KAAhB,4B,GA5BLR,aAwDJC,eAfS,SAACC,GACvB,MAAO,CACLqD,iBAAkBrD,EAAMC,aAAaoD,iBACrCF,MAAOnD,EAAMC,aAAakD,UAIH,SAAClB,GAC1B,MAAM,CACJgB,UAAW,kBAAMhB,EAAS,CAAC9B,KAAM,eACjC+C,YAAa,kBAAMjB,EAAS,CAAC9B,KAAM,eACnCoD,aAAc,SAACnC,GAAD,OAAQa,EAAS,CAAC9B,KAAM,cAAegB,IAAKC,QAI/CrB,CAA6CqD,G,wBChEtDI,GAAQC,EADkBC,IAAOD,yBACDC,IAAOF,OAGvCG,EAAe,CAAEpC,MAAO,OAAQqC,UAAU,GAAIC,aAAa,IAWlDC,E,iLARP,OACI,yBAAKxC,MAAOqC,GACR,kBAACH,EAAD,CAAOO,IAAK,IAAKC,IAAK,IAAOC,aAAc,CAAC,KAAM,MAAOC,aAAc,SAAAC,GAAK,gBAAOA,W,GAJtErE,aCmCdsE,E,iLA/BX,OACE,kBAAC,aAAD,KACE,yBAAKhD,GAAG,iBAAiB1B,UAAU,0BACjC,kBAAC,EAAD,MACA,6BAASA,UAAU,mBACjB,yBAAKA,UAAU,MAAM0B,GAAG,YACtB,yBAAKA,GAAG,oBAAoB1B,UAAU,sCACpC,uCAEE,kBAAC,EAAD,QAKJ,yBAAKA,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2E,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,UAAWrC,IACxC,kBAAC,IAAD,CAAOkC,KAAK,QAAQC,OAAK,EAACC,QAAM,EAACC,UAAWpB,QAKpD,uC,GAzBQtD,aCAE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBClBAC,EAAgB,CAClB3B,MAAO,EACPtD,SAAU,EACVwD,iBAAiB,IAkCNpD,EA/BM,WAAmC,IAAlCD,EAAiC,uDAAzB8E,EAAeC,EAAU,uCAC7CC,EAAQ,eAAOhF,GAErB,OAAO+E,EAAO5E,MACV,IAAK,YACL,sBACOH,EADP,CAEImD,MAAO6B,EAAS7B,MAAQ,IAI5B,IAAK,YACL,sBACOnD,EADP,CAEImD,MAAO6B,EAAS7B,MAAQ,IAG5B,IAAK,cAEL,OADAP,QAAQC,IAAImC,EAAS3B,iBAAiB4B,OAAOF,EAAO7C,mBACpD,eACOlC,EADP,CAEIH,SAAUmF,EAASnF,SAAW,EAC9BwD,iBAAkB2B,EAAS3B,iBAAiB4B,OAAOF,EAAO7C,oBAMlE,OAAO8C,GCvBLE,EAAcC,YAAgB,CAChClF,iBAaEmF,EAAQC,YAAYH,EAAaI,aAVrB,SAACF,GACf,OAAO,SAAAG,GACH,OAAO,SAAAR,GACH,IAAMpC,EAAS4C,EAAKR,GAEpB,OADAnC,QAAQC,IAAI,aAAcF,GACnBA,QAOnB6C,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GAAO,kBAAC,EAAD,OAAoBM,SAASC,eAAe,SFwG9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,MAAK,SAAAuD,GACjCA,EAAaC,kB","file":"static/js/main.3e22a76f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nconst Link = require(\"react-router-dom\").Link;\n\n\nclass CartIcon extends Component {\n\n  render() {\n    return (\n      <Link to=\"/cart\" className=\"cardIcon\">\n        Card Icon {this.props.quantity}\n      </Link>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quantity: state.reducerCount.quantity\n  }\n}\n\nexport default connect(mapStateToProps)(CartIcon);","import React,{ Component } from 'react';\n\nclass Search extends Component {\n    render(){\n        return(\n            <div className=\"searchbar mr-3\">\n                <input className=\"search_input\" type=\"text\" name=\"\" placeholder=\"Search...\" />\n                <a href=\"#\" className=\"search_icon\"><i className=\"fas fa-search\"></i></a>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport CartIcon from './cartIcon.component';\nimport Search from './search.component';\n\n\nclass Header extends Component {\n  \n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"headerWrapper\">\n        <Navbar expand=\"lg\" variant=\"dark\" bg=\"primary\">\n            <Navbar.Brand href=\"cart-app-assignment/#/\">Logo</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              \n              <Navbar.Text>\n                <Search />\n              </Navbar.Text>\n              <Navbar.Text>\n                <CartIcon />\n              </Navbar.Text>\n              \n            </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card } from 'react-bootstrap';\n\n\n\n\nclass ItemListCard extends Component {\n    constructor(props) {\n      super(props);\n\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"row\">\n          {\n            this.props.dataList.map((item) => (\n                <div className=\"col-sm-3 mb-4\" key={item.id}>\n                  <Card style={{ width: '100%' }}>\n                    <Card.Img variant=\"top\" src={item.img_url} />\n                    <Card.Body>\n                      <Card.Title>{ item.name }</Card.Title>\n                      <Card.Text>\n                        \n                      </Card.Text>\n                      <Button onClick={() => this.props.addToCart(item)} variant=\"primary\">Add to Cart</Button>\n                    </Card.Body>\n                  </Card>\n                </div>\n            ))\n          }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      itemCount: state.reducerCount.itemCount\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return{\n      addToCart: (item) => dispatch({type: 'ADD_TO_CART', historyAddToCart:item})\n    }\n  }\n  export default connect(mapStateToProps, mapDispatchToProps)(ItemListCard);","import React, { Component, Fragment } from 'react';\nimport ItemListCard from './itemListCard.Component';\n \nclass Home extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.cardList();\n  }\n\n  cardList() {\n    fetch(\"https://api.myjson.com/bins/qzuzi\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h3>Product List</h3>\n        {/* <SortCard /> */}\n        <ItemListCard dataList={this.state.items}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\n\nconst Count = (props) => {\n\tconst { onCountUp, onCountDown, count } = props;\n\n\treturn (\n\t\t<div className=\"countCard\">\n      <button onClick={onCountUp}> Age Up </button>\n      <div> Count <span>{count}</span></div>\n      <button onClick={onCountDown}> Age Down </button>\n\t\t</div>\n\t)\n}\nclass Cart extends Component {\n  \n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    console.log(this.props.addToCardHistory);\n    return (\n        <section className=\"container-fluid\">\n          <div className=\"row\">\n            {\n              this.props.addToCardHistory.map((el) => {\n                return(\n                    <div className=\"col-sm-6\" key={el.id}>\n                      <Card className=\"mb-3\">\n                      <Card.Body>\n                        <Card.Title>{el.name}</Card.Title>\n                        <Card.Text>\n                          <Count \n                            id={el.id}\n                            onCountUp={this.props.onCountUp}\n                            onCountDown={this.props.onCountDown}\n                            count={this.props.count}\n                          /> \n                        </Card.Text>\n                        <Card.Link href=\"#\">Card Link</Card.Link>\n                        <Card.Link href=\"#\">Another Link</Card.Link>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                )\n              })\n            }     \n          </div>     \n        </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    addToCardHistory: state.reducerCount.addToCardHistory,\n    count: state.reducerCount.count\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    onCountUp: () => dispatch({type: 'COUNT_ADD'}),\n    onCountDown: () => dispatch({type: 'COUNT_SUB'}),\n    onDeleteItem: (id) => dispatch({type: 'DELETE_ITEM', key: id})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport React, {Component} from 'react'\nimport Slider from 'rc-slider';\n\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n  \nconst wrapperStyle = { width: \"auto\", marginTop:35, marginBottom:25 };\nclass FilterProgress extends Component{\n    render(){\n        return (\n            <div style={wrapperStyle}>\n                <Range min={100} max={10000} defaultValue={[1500, 5800]} tipFormatter={value => `${value}`} />\n            </div>\n        )\n    }\n}\n\nexport default FilterProgress;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { HashRouter as Router, Switch } from 'react-router-dom';\nimport { Route } from \"react-router-dom\"\n\nimport Header from './Components/header.component';\nimport Home from './Components/home.component';\nimport Cart from './Components/cart.component';\nimport FilterProgress from './Components/filter.component';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        <div id=\"layout-content\" className=\"layout-content-wrapper\">\n          <Header />\n          <section className=\"container-fluid\">\n            <div className=\"row\" id=\"body-row\">\n              <div id=\"sidebar-container\" className=\"sidebar-expanded d-none d-md-block\">\n                <aside>\n                  Aside\n                  <FilterProgress \n                    \n                  />\n                </aside>\n              </div>\n              <div className=\"col p-4\">\n                <Switch>\n                  <Route path=\"/\" exact strict component={Home} />\n                  <Route path=\"/cart\" exact strict component={Cart} />\n                </Switch>\n              </div>\n            </div>\n          </section>\n          <footer>\n            \n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const innitialState = {\n    count: 0,\n    quantity: 0,\n    addToCardHistory:[]\n}\n\nconst reducerCount = (state = innitialState, action) =>{\n    const newState = {...state};\n\n    switch(action.type){\n        case \"COUNT_ADD\":\n        return{\n            ...state,\n            count: newState.count + 1\n        }\n        break;\n\n        case \"COUNT_SUB\":\n        return{\n            ...state,\n            count: newState.count - 1\n        }\n        break;\n        case \"ADD_TO_CART\":\n        console.log(newState.addToCardHistory.concat(action.historyAddToCart))\n        return{\n            ...state,\n            quantity: newState.quantity + 1,\n            addToCardHistory: newState.addToCardHistory.concat(action.historyAddToCart)\n        }\n        break;\n        \n    }\n\n    return newState;\n} \n\nexport default reducerCount;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n//\nimport reducerCount from './store/reducerCount';\n\nconst rootReducer = combineReducers({\n    reducerCount\n})\n\nconst logAction = (store) => {\n    return next => {\n        return action => {\n            const result = next(action);\n            console.log(\"result 1: \", result);\n            return result;\n        }\n    }\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logAction));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}