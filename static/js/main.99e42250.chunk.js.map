{"version":3,"sources":["Components/cartIcon.component.js","Components/search.component.js","Components/header.component.js","Components/itemListCard.Component.js","Components/home.component.js","Components/cart.component.js","Components/filter.component.js","App.js","serviceWorker.js","store/reducerCount.js","index.js"],"names":["Link","require","CartIcon","to","className","this","props","quantity","Component","connect","state","reducerCount","Search","type","name","placeholder","href","Header","Navbar","expand","variant","bg","Brand","Collapse","Text","itemCount","historyAddToCart","ItemListCard","dataList","map","item","key","id","Card","style","width","Img","src","img_url","Body","Title","Button","onClick","addToCart","dispatch","Home","isLoaded","items","cardList","fetch","then","res","json","result","console","log","setState","error","Cart","Range","createSliderWithTooltip","Slider","wrapperStyle","marginTop","marginBottom","FilterProgress","min","max","defaultValue","tipFormatter","value","App","path","exact","strict","component","Boolean","window","location","hostname","match","innitialState","count","action","newState","concat","rootReducer","combineReducers","store","createStore","applyMiddleware","next","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99e42250.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nconst Link = require(\"react-router-dom\").Link;\n\n\nclass CartIcon extends Component {\n\n  render() {\n    return (\n      <Link to=\"/cart\" className=\"cardIcon\">\n        Card Icon {this.props.quantity}\n      </Link>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      quantity: state.reducerCount.quantity,\n    }\n  }\n\nexport default connect(mapStateToProps)(CartIcon);","import React,{ Component } from 'react';\n\nclass Search extends Component {\n    render(){\n        return(\n            <div className=\"searchbar mr-3\">\n                <input className=\"search_input\" type=\"text\" name=\"\" placeholder=\"Search...\" />\n                <a href=\"#\" className=\"search_icon\"><i className=\"fas fa-search\"></i></a>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport CartIcon from './cartIcon.component';\nimport Search from './search.component';\n\n\nclass Header extends Component {\n  \n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"headerWrapper\">\n        <Navbar expand=\"lg\" variant=\"dark\" bg=\"primary\">\n            <Navbar.Brand href=\"/\">Logo</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              \n              <Navbar.Text>\n                <Search itemCount={this.props.historyAddToCart}/>\n              </Navbar.Text>\n              <Navbar.Text>\n                <CartIcon />\n              </Navbar.Text>\n              \n            </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card } from 'react-bootstrap';\n\n\nconst Count = (props) => {\n\tconst { onCountUp, onCountDown, count } = props;\n\n\treturn (\n\t\t<div className=\"countCard\">\n      <button onClick={onCountUp}> Age Up </button>\n      <div> Count <span>{count}</span></div>\n      <button onClick={onCountDown}> Age Down </button>\n\t\t</div>\n\t)\n}\n\nclass ItemListCard extends Component {\n    constructor(props) {\n      super(props);\n\n    }\n  \n    render() {\n      return (\n        <div>\n          Main Content\n          <div className=\"row\">\n          {\n            this.props.dataList.map((item) => (\n              \n                <div className=\"col-sm-3 mb-4\" key={item.id}>\n                <Card style={{ width: '100%' }}>\n                  <Card.Img variant=\"top\" src={item.img_url} />\n                  <Card.Body>\n                    <Card.Title>{ item.name }</Card.Title>\n                    <Card.Text>\n                      \n                    </Card.Text>\n                    <Button onClick={() => this.props.addToCart(item, this.props.itemCount)} variant=\"primary\">Add to Cart</Button>\n                  </Card.Body>\n                </Card>\n\n\n                {/* <Count \n                  id={item.id}\n                  onCountUp={this.props.onCountUp}\n                  onCountDown={this.props.onCountDown}\n                  count={this.props.count}\n                /> */}\n                </div>\n            ))\n          }\n          </div>\n        </div>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      itemCount: state.reducerCount.itemCount,\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return{\n      addToCart: (item, quantity) => dispatch({type: 'ADD_TO_CART', item, quantity})\n    }\n  }\n  export default connect(mapStateToProps, mapDispatchToProps)(ItemListCard);","import React, { Component, Fragment } from 'react';\nimport ItemListCard from './itemListCard.Component';\n \nclass Home extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.cardList();\n  }\n\n  cardList() {\n    fetch(\"https://api.myjson.com/bins/qzuzi\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* <SortCard /> */}\n        <ItemListCard dataList={this.state.items}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n \nclass Cart extends Component {\n  \n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <section className=\"container-fluid\">\n          Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart\n\n          Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart Cart \n        </section>\n    );\n  }\n}\n\nexport default Cart;","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport React, {Component} from 'react'\nimport Slider from 'rc-slider';\n\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n  \nconst wrapperStyle = { width: \"auto\", marginTop:35, marginBottom:25 };\nclass FilterProgress extends Component{\n    render(){\n        return (\n            <div style={wrapperStyle}>\n                <Range min={100} max={10000} defaultValue={[1500, 5800]} tipFormatter={value => `${value}`} />\n            </div>\n        )\n    }\n}\n\nexport default FilterProgress;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route } from \"react-router-dom\"\n\nimport Header from './Components/header.component';\nimport Home from './Components/home.component';\nimport Cart from './Components/cart.component';\nimport FilterProgress from './Components/filter.component';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        <div id=\"layout-content\" className=\"layout-content-wrapper\">\n          <Header />\n          <section className=\"container-fluid\">\n          <div className=\"row\" id=\"body-row\">\n            <div id=\"sidebar-container\" className=\"sidebar-expanded d-none d-md-block\">\n              <aside>\n                Aside\n                <FilterProgress \n                  \n                />\n              </aside>\n            </div>\n            <div className=\"col p-4\">\n              <Route path=\"/\" exact strict component={Home} />\n              <Route path=\"/cart\" exact strict component={Cart} />\n            </div>\n          </div>\n        </section>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const innitialState = {\n    count: 0,\n    quantity: 0,\n    historyAddToCart: []\n}\n\nconst reducerCount = (state = innitialState, action) =>{\n    const newState = {...state};\n\n    switch(action.type){\n        case \"COUNT_ADD\":\n        return{\n            ...state,\n            count: newState.count + 1\n        }\n        break;\n\n        case \"COUNT_SUB\":\n        return{\n            ...state,\n            count: newState.count - 1\n        }\n        break;\n        case \"ADD_TO_CART\":\n        return{\n            ...state,\n            quantity: newState.quantity + 1,\n            historyAddToCart: newState.historyAddToCart.concat({\n                item: newState\n            })\n        }\n        break;\n        \n    }\n\n    return newState;\n} \n\nexport default reducerCount;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n//\nimport reducerCount from './store/reducerCount';\n\nconst rootReducer = combineReducers({\n    reducerCount\n})\n\nconst logAction = (store) => {\n    return next => {\n        return action => {\n            const result = next(action);\n            console.log(\"result 1: \", result);\n            return result;\n        }\n    }\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logAction));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}